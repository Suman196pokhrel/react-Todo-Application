{"version":3,"sources":["components/Form.jsx","components/Todo.jsx","components/List.jsx","App.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","onSubmit","e","preventDefault","className","TextField","autoComplete","id","label","variant","onChange","val","target","value","type","name","Button","color","onClick","newValue","Math","floor","random","text","completed","Todo","todo","map","item","filter","List","filteredTodos","TransitionGroup","component","CSSTransition","timeout","classNames","App","useState","status","setFilteredTodos","useEffect","filterHandler","Typography","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0da99348.chunk.js","sourcesContent":["import { Button, TextField, Typography } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\nfunction Form({ inputText, setInputText, todos, setTodos, setStatus }) {\r\n\r\n\r\n     const onChangeHandler = (e) => {\r\n          let val = e.target.value;\r\n          setInputText(val)\r\n     }\r\n\r\n     const addTodos = (e) => {\r\n          e.preventDefault();\r\n          if(inputText !== ''){\r\n               var newValue = {\r\n                    id: Math.floor(Math.random() * 10000),\r\n                    text: inputText,\r\n                    completed: false\r\n               }\r\n               setTodos([newValue, ...todos])\r\n               \r\n          }\r\n          setInputText('');\r\n     }\r\n\r\n\r\n     const statusHandler = (e) => {\r\n          setStatus(e.target.value)\r\n     }\r\n\r\n\r\n     return (\r\n\r\n          <form onSubmit={(e) => { e.preventDefault() }}>\r\n               <div className='form1'>\r\n                    <TextField autoComplete='off' id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" onChange={onChangeHandler} type=\"text\" value={inputText} name=\"todoForm\" />\r\n                    <Button className='button1' variant=\"contained\" color=\"primary\" onClick={addTodos}>Add Todos </Button>\r\n               </div>\r\n\r\n\r\n               <select onChange={statusHandler} className='comboBox'>\r\n                    <option >All</option>\r\n                    <option >Completed</option>\r\n                    <option >Not Completed</option>\r\n\r\n               </select>\r\n\r\n          </form>\r\n\r\n     )\r\n}\r\n\r\nexport default Form\r\n","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nfunction Todo({todo,setTodos,todos,inputText,setInputText}) {\r\n\r\n\r\n     const deleteTodo =()=>{\r\n         setTodos(todos.filter((item)=>{\r\n              return item.id !== todo.id\r\n         }))\r\n     }\r\n\r\n     \r\n     const checkTodo = ()=>{\r\n          setTodos(todos.map((item)=>{\r\n               if(item.id===todo.id){\r\n                    return{\r\n                         ...item,completed:!item.completed\r\n                    }\r\n               }else{\r\n                    return item\r\n               }\r\n          }))\r\n     }\r\n     \r\n\r\n     return (\r\n          <div className='todoList'>\r\n               <li className={`todoItem ${todo.completed ? 'completed':'notCompleted'} `}>{todo.text}</li>\r\n               <div className='todoBtns'>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={checkTodo}> Check </Button>\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={deleteTodo}>Delete </Button>\r\n               </div>\r\n               \r\n          </div>\r\n     )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\n\r\nfunction List({todos,setTodos,inputText,setInputText,filteredTodos}) {\r\n     return (\r\n          \r\n           <TransitionGroup component='div'>\r\n              {filteredTodos.map((todo)=>{\r\n                   return (\r\n                    <CSSTransition key={todo.id} timeout={700} classNames=\"item\">\r\n                         <Todo key={todo.id} todo={todo} todos={todos} setTodos={setTodos}/>\r\n                    </CSSTransition>\r\n                   )\r\n              })}\r\n          \r\n          </TransitionGroup>\r\n     )\r\n}\r\n\r\nexport default List\r\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport List from './components/List';\nimport {Card, Typography} from '@material-ui/core'\n\n\nfunction App() {\n\n\n\n  // STATES \n  const [inputText, setInputText] = useState('')\n  const [todos, setTodos] = useState([])\n  const [status, setStatus] = useState('All')\n  const [filteredTodos,setFilteredTodos] = useState([])\n\n  // FUNCTION \n  const filterHandler=()=>{\n    switch(status){\n      case \"Completed\":\n        setFilteredTodos(todos.filter((item)=> item.completed === true))\n        break\n      case \"Not Completed\":\n        setFilteredTodos(todos.filter((item)=> item.completed === false))\n        break\n      default:\n        setFilteredTodos(todos)\n        break\n\n    }\n  }\n\n  useEffect(()=>{\n    filterHandler()\n  },[todos, status])\n\n\n  return (\n    <div className=\"App\">\n        <Typography variant='h3'>\n          Todo Application\n        </Typography>\n        <hr></hr>\n\n        <Form \n        todos = {todos}\n        setTodos ={setTodos}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n        />\n\n        <div className='listContainer'>\n          <List \n          todos = {todos}\n          setTodos={setTodos}\n          inputText={inputText}\n          setInputText={setInputText}\n          filteredTodos = {filteredTodos}\n          />\n        </div>\n        \n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}